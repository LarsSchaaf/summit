name: Test & Publish
on:
  push:
  pull_request:
    branches:
      # Branches from forks have the form 'user:branch-name' so we only run
      # this job on pull_request events for branches that look like fork
      # branches. Without this we would end up running this job twice for non
      # forked PRs, once for the push and then once for opening the PR.
    - '**:**'

jobs:
  #Run pytest and build package
  test_build:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     # os: [macos-latest, ]
    #     python: [3.8, 3.9, 3.10]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Install poetry
      uses: Gr1N/setup-poetry@v7

    - name: Cache poetry dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    
    - name: Install dependencies
      run: poetry install -E experiments -E entmoot

    - name: Run pytest
      run: poetry run pytest --doctest-modules --ignore=experiments --disable-warnings

    # Check that the build process works correctly
    - name: Build package
      run: poetry build
  
  # Publish to pypi on version change
  publish:
   needs: test_build
   runs-on: ubuntu-latest

   steps:
   - uses: actions/checkout@v2
     with:
       # Make sure to fetch the last two commits
       # Needed forthe version bump and tag
       fetch-depth: 2

   - name: Install python
     uses: actions/setup-python@v2
     with:
       python-version: '3.7'

   - name: Install poetry
     uses: Gr1N/setup-poetry@v4


   - name: Check for version bump and tag
     id: version_check
     uses: salsify/action-detect-and-tag-new-version@v2.0.1
     with:
       tag-template: "{VERSION}"
       create-tag: ${{ github.ref == 'refs/heads/master' }} # only create new tag on master
       version-command: |
         python get_version.py

  #  - name: Publish to pypi
  #    uses: JRubics/poetry-publish@v1.10
  #    if: ${{ steps.version_check.tag }}
  #    with:
  #     repository_username: ${{ secrets.PYPI_USERNAME }}
  #     repository_password: ${{ secrets.PYPI_PASSWORD }}
  #     repository_name: "summit"
  #     repository_url: "https://test.pypi.org/legacy/"

  #  - name: Publish
  #    # Only publish if there is a new tag
  #    if: startsWith(github.ref, 'refs/tags/')
  #    run: poetry publish --build -u  -p  --dry-run
   - name: Publish to pypi
     uses: coveooss/pypi-publish-with-poetry@main
     with:
        project-name: summit
        pypi-token: ${{ secrets.PYPI_TOKEN }}
        dry-run: ${{ github.ref != 'refs/heads/main'}}
